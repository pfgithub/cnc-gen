mixin spoiler(title)
  .spoiler
    span.spoilerText Spoiler
    input.spoilerChecked(type='checkbox', showtext=title)
    .spoilerContent
      block

mixin help()
  .helpbtn
    a.helplink(href="#") (?)
    .helptext
      block

mixin numInput(name, realname, defaulte)
  input(type="number",name=name,value=defaulte,required,step="any")
  label= realname
  +help
    block

html
  head
    title Control Panel
    link(href="normalize.css", rel="stylesheet")
    link(href="style.css", rel="stylesheet")
  body
    script(src="/script.js")
    script.
      POWERMODE.colorful = false; // make power mode colorful
      POWERMODE.shake = false; // turn off shake
      document.body.addEventListener('input', POWERMODE);

      setInterval(
        function(){
          document.getElementById("code2").innerHTML='"super-image-3-' + (new Date()).getTime() + '"'
        }
      ,100);
    .navbar
      a.navbari.navbariselected(href="#") Convert
      a.navbari(href="http://editor.method.ac/",target="_blank") Create
    form(action="get.php",method="post",encType="multipart/form-data")
      input(type="text",name="name",value="Unnamed",required)
      label File name
      +help
        | The name you want the downloaded file to have
        | Example:
        br
        code "Super Image 3"
        | creates the file
        code#code2 "super-image-3-TIMESTAMP"
      br
      input(type="file",name="cut",required)
      label Cut SVG
      +help
        | The SVG file containing paths of what you want to cut
        | Cuts get done with the top path first
        | which usually means the first ones you make your graphics program
      br
      input(type="file",name="crease")
      label Crease SVG
      +help
        | The SVG file containing paths what you want to crease
      br
      input(type="number",name="s",value="10",required,step="any")
      label Resulting cut width
      +help
        | The width of your resulting output file
      br
      +spoiler("advanced settings")
        br
        input(type="number",name="l",value="10",required,step="any")
        label Rotation Cutoff
        +help
          | How much to allow the cutting tool to turn without pulling out of the material
          | Set to
          code -1
          | to disable this feature
          | or
          code 360
          | if your cutting tool has no rotation (a) value
        br
        input(type="number",name="d",value="-0.5",required,step="any")
        label Depth
        +help
          | The number on the z axis so that the cutting tool is cutting all the way through the material
        br
        input(type="number",name="e",value="0",required,step="any")
        label Scratch
        +help
          | The number on the z axis so that the cutting tool is almost touching the material but not quite
        br
        input(type="number",name="f",value="0.5",required,step="any")
        label Crease
        +help
          | The number on the z axis so that the cutting tool is creasing the material
        br
        input(type="number",name="ho",value="2",required,step="any")
        label Height Offset
        +help
          | A number to use if the cut comes out too low or too high
          | Example:
          | The cut comes out too low, height offset =
          code 0.9
        br
        input(type="number",name="p",value="2.3",required,step="any")
        label Crease tool offset
        +help
          | How far down the creasing tool is from the cutting tool
          | Examle:
          | The creasing tool is
          code 3
          | down, so the crease tool offset =
          code 3
        br
        input(type="number",name="m",value="1",required,step="any")
        label X-Multiplier
        +help
          | A number to multiply the x value by
        br
        input(type="number",name="n",value="-1",required,step="any")
        label Y-Multiplier
        +help
          | A number to multiply the y value by
        br
        +numInput("w", "Width", 500)
          | The width of your input svg (in
          code px
          | )
        br
        +numInput("h", "Height", 500)
          | The height of your input svg (in
          code px
          | )

      br
      button Download
    script.
      function checkVersion(){
        var rv = -1; // Return value assumes failure.
        if (/MSIE/i.test(navigator.userAgent)) {
           rv = 1;
        }

        if (/Edge\/\d./i.test(navigator.userAgent)){
           // This is Microsoft Edge
           rv = 2;
        }
        if(navigator.userAgent.indexOf("Firefox") > -1){
          rv = 3 // Firefox
        }
        return rv;
      }
      var result = checkVersion();

      function toArray(obj) {
        var array = [];
        // iterate backwards ensuring that length is an UInt32
        for (var i = obj.length >>> 0; i--;) {
          array[i] = obj[i];
        }
        return array;
      }
      console.log(navigator);
      if(result > -1){
        var nope = document.createElement("div");
        nope.innerHTML = "Some features of this website may not look as good on your browser";
        nope.style.position="fixed";
        nope.style.bottom="0";
        nope.style.left="0";
        nope.style.width="100%";
        nope.style.backgroundColor = "#fff";
        nope.style.fontSize="24pt";
        document.body.appendChild(nope);
        toArray(document.getElementsByClassName("spoilerChecked")).forEach(function(domelem){
          domelem.className = "spoilerChecked ie";
        });
        toArray(document.getElementsByClassName("spoiler")).forEach(function(domelem){
          var elem = document.createElement("label");
          elem.innerHTML = "^^ Show/hide advanced settings ^^";
          domelem.appendChild(elem);
        });
        console.log("IE DETECTED, EXTERMINATING");
      }
